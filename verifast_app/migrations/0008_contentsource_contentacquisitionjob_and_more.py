# Generated by Django 5.2.4 on 2025-08-12 17:25

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("verifast_app", "0007_content_acquisition_models"),
    ]

    operations = [
        migrations.CreateModel(
            name="ContentSource",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Unique name for the content source",
                        max_length=100,
                        unique=True,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, help_text="Description of the content source"
                    ),
                ),
                (
                    "source_type",
                    models.CharField(
                        choices=[
                            ("rss", "RSS Feed"),
                            ("newsdata_api", "NewsData.io API"),
                            ("scraper", "Web Scraper"),
                            ("manual", "Manual Submission"),
                        ],
                        help_text="Type of content source",
                        max_length=20,
                    ),
                ),
                (
                    "url",
                    models.URLField(help_text="Primary URL for the content source"),
                ),
                (
                    "language",
                    models.CharField(
                        choices=[
                            ("en", "English"),
                            ("es", "Spanish"),
                            ("both", "Both Languages"),
                        ],
                        default="en",
                        help_text="Language(s) supported by this source",
                        max_length=10,
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("low", "Low Priority"),
                            ("normal", "Normal Priority"),
                            ("high", "High Priority"),
                            ("critical", "Critical Priority"),
                        ],
                        default="normal",
                        help_text="Priority level for content acquisition",
                        max_length=10,
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this source is currently active",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("inactive", "Inactive"),
                            ("error", "Error"),
                            ("rate_limited", "Rate Limited"),
                            ("maintenance", "Maintenance"),
                        ],
                        default="active",
                        help_text="Current operational status",
                        max_length=20,
                    ),
                ),
                (
                    "requests_per_hour",
                    models.PositiveIntegerField(
                        default=60,
                        help_text="Maximum requests per hour for this source",
                    ),
                ),
                (
                    "requests_per_day",
                    models.PositiveIntegerField(
                        default=1000,
                        help_text="Maximum requests per day for this source",
                    ),
                ),
                (
                    "current_hour_requests",
                    models.PositiveIntegerField(
                        default=0, help_text="Requests made in current hour"
                    ),
                ),
                (
                    "current_day_requests",
                    models.PositiveIntegerField(
                        default=0, help_text="Requests made in current day"
                    ),
                ),
                (
                    "last_request_time",
                    models.DateTimeField(
                        blank=True, help_text="Timestamp of last request", null=True
                    ),
                ),
                (
                    "last_successful_fetch",
                    models.DateTimeField(
                        blank=True, help_text="Last successful content fetch", null=True
                    ),
                ),
                (
                    "last_error",
                    models.TextField(
                        blank=True, help_text="Last error message encountered"
                    ),
                ),
                (
                    "consecutive_failures",
                    models.PositiveIntegerField(
                        default=0, help_text="Number of consecutive failures"
                    ),
                ),
                (
                    "total_articles_fetched",
                    models.PositiveIntegerField(
                        default=0, help_text="Total articles successfully fetched"
                    ),
                ),
                (
                    "config_data",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Source-specific configuration data",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Content Source",
                "verbose_name_plural": "Content Sources",
                "db_table": "content_sources",
                "ordering": ["-priority", "name"],
            },
        ),
        migrations.CreateModel(
            name="ContentAcquisitionJob",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "job_type",
                    models.CharField(
                        choices=[
                            ("scheduled", "Scheduled Acquisition"),
                            ("manual", "Manual Trigger"),
                            ("retry", "Retry Failed"),
                            ("backfill", "Backfill Historical"),
                        ],
                        help_text="Type of acquisition job",
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("running", "Running"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="pending",
                        help_text="Current job status",
                        max_length=20,
                    ),
                ),
                (
                    "started_at",
                    models.DateTimeField(
                        blank=True, help_text="Job start time", null=True
                    ),
                ),
                (
                    "completed_at",
                    models.DateTimeField(
                        blank=True, help_text="Job completion time", null=True
                    ),
                ),
                (
                    "error_message",
                    models.TextField(
                        blank=True, help_text="Error message if job failed"
                    ),
                ),
                (
                    "articles_found",
                    models.PositiveIntegerField(
                        default=0, help_text="Number of articles found"
                    ),
                ),
                (
                    "articles_processed",
                    models.PositiveIntegerField(
                        default=0, help_text="Number of articles successfully processed"
                    ),
                ),
                (
                    "articles_duplicated",
                    models.PositiveIntegerField(
                        default=0, help_text="Number of duplicate articles skipped"
                    ),
                ),
                (
                    "articles_rejected",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Number of articles rejected by quality filters",
                    ),
                ),
                (
                    "config_data",
                    models.JSONField(
                        blank=True, default=dict, help_text="Job-specific configuration"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "source",
                    models.ForeignKey(
                        help_text="Content source for this job",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="verifast_app.contentsource",
                    ),
                ),
            ],
            options={
                "verbose_name": "Content Acquisition Job",
                "verbose_name_plural": "Content Acquisition Jobs",
                "db_table": "content_acquisition_jobs",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ContentFingerprint",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "url_hash",
                    models.CharField(
                        db_index=True,
                        help_text="Hash of the article URL",
                        max_length=64,
                    ),
                ),
                (
                    "title_hash",
                    models.CharField(
                        db_index=True,
                        help_text="Hash of the article title",
                        max_length=64,
                    ),
                ),
                (
                    "content_hash",
                    models.CharField(
                        db_index=True,
                        help_text="Hash of the article content",
                        max_length=64,
                    ),
                ),
                (
                    "language",
                    models.CharField(
                        db_index=True, help_text="Article language", max_length=10
                    ),
                ),
                (
                    "topic_category",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        help_text="Detected topic category",
                        max_length=50,
                    ),
                ),
                (
                    "first_seen",
                    models.DateTimeField(
                        auto_now_add=True, help_text="When this content was first seen"
                    ),
                ),
                (
                    "last_seen",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="When this content was last encountered",
                    ),
                ),
                (
                    "article",
                    models.ForeignKey(
                        blank=True,
                        help_text="Associated article if processed",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="verifast_app.article",
                    ),
                ),
                (
                    "source",
                    models.ForeignKey(
                        help_text="Source that provided this content",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="verifast_app.contentsource",
                    ),
                ),
            ],
            options={
                "verbose_name": "Content Fingerprint",
                "verbose_name_plural": "Content Fingerprints",
                "db_table": "content_fingerprints",
                "indexes": [
                    models.Index(
                        fields=["url_hash", "language"],
                        name="content_fin_url_has_71094c_idx",
                    ),
                    models.Index(
                        fields=["title_hash", "language"],
                        name="content_fin_title_h_c5ae51_idx",
                    ),
                    models.Index(
                        fields=["content_hash", "language"],
                        name="content_fin_content_a5a998_idx",
                    ),
                    models.Index(
                        fields=["topic_category", "language", "first_seen"],
                        name="content_fin_topic_c_130519_idx",
                    ),
                ],
                "unique_together": {("url_hash", "title_hash", "content_hash")},
            },
        ),
        migrations.CreateModel(
            name="AcquisitionMetrics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "date",
                    models.DateField(db_index=True, help_text="Date for these metrics"),
                ),
                (
                    "hour",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Hour (0-23) for hourly metrics",
                        null=True,
                    ),
                ),
                (
                    "language",
                    models.CharField(
                        blank=True,
                        help_text="Language (empty for all languages)",
                        max_length=10,
                    ),
                ),
                (
                    "articles_found",
                    models.PositiveIntegerField(
                        default=0, help_text="Articles found from sources"
                    ),
                ),
                (
                    "articles_processed",
                    models.PositiveIntegerField(
                        default=0, help_text="Articles successfully processed"
                    ),
                ),
                (
                    "articles_duplicated",
                    models.PositiveIntegerField(
                        default=0, help_text="Duplicate articles skipped"
                    ),
                ),
                (
                    "articles_rejected",
                    models.PositiveIntegerField(
                        default=0, help_text="Articles rejected by quality filters"
                    ),
                ),
                (
                    "total_requests",
                    models.PositiveIntegerField(
                        default=0, help_text="Total API/RSS requests made"
                    ),
                ),
                (
                    "successful_requests",
                    models.PositiveIntegerField(
                        default=0, help_text="Successful requests"
                    ),
                ),
                (
                    "failed_requests",
                    models.PositiveIntegerField(default=0, help_text="Failed requests"),
                ),
                (
                    "avg_response_time",
                    models.FloatField(
                        default=0.0, help_text="Average response time in seconds"
                    ),
                ),
                (
                    "avg_content_length",
                    models.PositiveIntegerField(
                        default=0, help_text="Average content length in characters"
                    ),
                ),
                (
                    "avg_reading_level",
                    models.FloatField(default=0.0, help_text="Average reading level"),
                ),
                (
                    "quiz_generation_success_rate",
                    models.FloatField(
                        default=0.0, help_text="Quiz generation success rate"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "source",
                    models.ForeignKey(
                        blank=True,
                        help_text="Specific source (null for aggregate)",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="verifast_app.contentsource",
                    ),
                ),
            ],
            options={
                "verbose_name": "Acquisition Metrics",
                "verbose_name_plural": "Acquisition Metrics",
                "db_table": "acquisition_metrics",
                "indexes": [
                    models.Index(
                        fields=["date", "source"], name="acquisition_date_07d9eb_idx"
                    ),
                    models.Index(
                        fields=["date", "language"], name="acquisition_date_cc83a1_idx"
                    ),
                    models.Index(
                        fields=["date", "hour"], name="acquisition_date_050883_idx"
                    ),
                ],
                "unique_together": {("date", "hour", "source", "language")},
            },
        ),
    ]
